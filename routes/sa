  async login(body:any) {
      return this.httpClient.post<any>(url+'/users/signin',body)
          .subscribe(res => this.setSession(res));
  }
        
  private setSession(authResult:any) {
    debugger;
      const expiresAt = moment().add(authResult.expiresIn,'second');
      localStorage.setItem('id_token', authResult.token);
      localStorage.setItem("expires_at", JSON.stringify(expiresAt.valueOf()) );
  }          

  logout() {
      localStorage.removeItem("id_token");
      localStorage.removeItem("expires_at");
  }

  public isLoggedIn() {
      return moment().isBefore(this.getExpiration());
  }

  isLoggedOut() {
      return !this.isLoggedIn();
  }

  getExpiration() {
      var expiration = localStorage.getItem("expires_at");
      //var expiresAt = JSON.parse(expiration);
      return moment(expiration);
  }    